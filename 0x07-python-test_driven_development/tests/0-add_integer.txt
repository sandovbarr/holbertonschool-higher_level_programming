=============================
Test cases for 0-add_integer
=============================

import module:
       >>> add_integer = __import__("0-add_integer").add_integer

Add two integer:
       >>> add_integer(7, 7)
       14

Add with one parameter:
       >>> add_integer(7)
       105

Add variable and integer
        >>> add_integer(a, 5)
        Traceback (most recent call last):
        ...
        NameError: name 'a' is not defined

Add char and integer
        >>> add_integer('a', 5)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Add two integers:
       >>> add_integer(1, 2)
       3

Add two integers, a is negative:
       >>> add_integer(100, -2)
       98

Add with one argument:
       >>> add_integer(2)
       100

Add floats and negative:
       >>> add_integer(100.3, -2)
       98

Add integer and string:
       >>> add_integer(4, "School")
       Traceback (most recent call last):
       ...
       TypeError: b must be an integer

Add without arguments:
       >>> add_integer(None)
       Traceback (most recent call last):
       ...
       TypeError: a must be an integer

Add one parameter 0:
       >>> add_integer(0)
       98

Add true datatype:
       >>> add_integer(True)
       Traceback (most recent call last):
       ...
       TypeError: a must be an integer

Add true NAN:
       >>> add_integer(float('nan'))
       Traceback (most recent call last):
       ...
       ValueError: cannot convert float NaN to integer

Add infinite float:
       >>> add_integer(float('inf'))
       Traceback (most recent call last):
       ...
       OverflowError: cannot convert float infinity to integer
