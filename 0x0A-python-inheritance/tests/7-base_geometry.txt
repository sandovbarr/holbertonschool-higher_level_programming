# importing module: 7-base_geometry
=========================================================
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

# check correct outputs
=========================================================
    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

# check for TypeError
=========================================================
    >>> bg.integer_validator("my_int", 'a')
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 'Holberton')
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 7.7)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", True)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", None)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("my_int", (1,0))
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", {1,0})
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", [1,0])
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

# check for ValueError
=========================================================
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ...
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", -7)
    Traceback (most recent call last):
    ...
    ValueError: my_int must be greater than 0

# Exception
=========================================================
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented
